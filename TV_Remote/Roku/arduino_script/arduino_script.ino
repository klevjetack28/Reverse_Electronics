#include <Arduino.h>
#include <avr/io.h>
#include <avr/interrupt.h>

#define IR_PIN 3
#define BUT_PIN 4

const uint16_t Disney_Plus[] PROGMEM = {9020, 4490, 580, 540, 590, 1670, 580, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1660, 590, 1670, 580, 550, 580, 540, 590, 540, 
      590, 1670, 580, 1670, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 590, 540, 580, 550, 580, 550, 580, 540, 
      590, 1670, 580, 1670, 580, 550, 580, 550, 580, 1670, 
      580, 1670, 590, 1660, 590, 1660, 590, 38290, 9040, 4490, 
      590, 540, 580, 1670, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 590, 540, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 590, 1660, 590, 1660, 
      590, 540, 590, 540, 590, 540, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 1670, 580, 1670, 
      580, 1670, 590, 540, 580, 38290, 9040, 4490, 580, 1670, 
      590, 540, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 550, 580, 550, 580, 550, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 540, 590, 540, 590, 540, 580, 1670, 
      590, 540, 590, 540, 580, 550, 580, 550, 580, 1670, 
      580, 1670, 580 };
const uint16_t Volume_Up[] PROGMEM = {9020, 4490, 580, 540, 590, 1670, 580, 550, 580, 1670, 
      580, 550, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 1670, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 540, 
      580, 550, 580, 550, 580, 540, 590, 540, 590, 1670, 
      580, 1670, 580, 1670, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 590, 540, 580, 550, 580, 550, 580, 1670, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 540, 590, 540, 580, 550, 580, 1670, 590, 540, 
      580, 550, 580, 550, 580, 550, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 580 };      
const uint16_t Settings[] PROGMEM = {9030, 4480, 590, 540, 590, 1660, 590, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 590, 1660, 590, 1670, 
      580, 1670, 580, 1670, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 550, 580, 550, 
      580, 540, 590, 540, 590, 1670, 580, 1670, 580, 550, 
      580, 550, 580, 1670, 580, 1670, 590, 1660, 590, 1670, 
      580, 540, 590, 540, 590, 1660, 590, 38300, 9040, 4490, 
      580, 550, 580, 1670, 590, 540, 580, 1670, 590, 540, 
      590, 1660, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 580, 550, 580, 1670, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 540, 590, 1660, 590, 1660, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1670, 580, 1670, 590, 540, 
      590, 540, 580, 540, 590 };      
const uint16_t Apple_TV[] PROGMEM = {9020, 4490, 580, 540, 590, 1670, 580, 540, 590, 1670, 
      580, 550, 580, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 540, 580, 1670, 590, 1660, 590, 1660, 590, 540, 
      590, 540, 590, 540, 590, 540, 590, 1660, 590, 540, 
      590, 540, 580, 550, 580, 1670, 580, 38300, 9040, 4490, 
      580, 550, 580, 1670, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 540, 
      590, 1660, 590, 1660, 590, 1660, 590, 1670, 580, 550, 
      580, 540, 590, 540, 590, 1660, 590, 540, 590, 540, 
      590, 540, 590, 540, 580, 38290, 9040, 4480, 590, 1670, 
      580, 550, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 1670, 580, 550, 580, 540, 590, 540, 
      590, 540, 590, 540, 590, 540, 590, 1660, 590, 1660, 
      590, 1660, 590, 540, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 540, 590, 540, 580, 550, 580, 1670, 
      590, 540, 580, 550, 580, 540, 590, 540, 590, 1670, 
      580, 1660, 590 };
const uint16_t Mute[] PROGMEM = {9020, 4480, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1670, 580, 1670, 580, 550, 580, 550, 580, 540, 
      590, 1670, 580, 1670, 590, 540, 590, 540, 580, 550, 
      580, 550, 580, 550, 580, 1670, 580, 550, 580, 550, 
      580, 1670, 580, 1670, 590, 1660, 590, 1670, 580, 1670, 
      590, 540, 580, 1670, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 550, 580, 540, 590, 540, 590, 540, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 1670, 
      580, 1670, 580, 1670, 590, 1660, 590, 1670, 580, 540, 
      590, 1670, 580, 540, 590 };
const uint16_t Power[] PROGMEM = {9020, 4480, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 1670, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      580, 550, 580, 1670, 580, 550, 580, 550, 580, 550, 
      580, 540, 590, 540, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 590, 540, 580, 1670, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 590, 540, 
      580, 1670, 590, 540, 580, 550, 580, 1670, 580, 550, 
      580, 550, 580, 540, 590, 1670, 580, 550, 580, 1670, 
      580, 1670, 590, 530, 590 };
const uint16_t Pause[] PROGMEM = {9020, 4480, 590, 540, 590, 1660, 590, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 580, 1670, 590, 540, 590, 540, 580, 1670, 
      590, 1660, 590, 540, 590, 1660, 590, 38300, 9040, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 550, 580, 540, 590, 1670, 580, 1670, 
      580, 550, 580, 550, 580, 1670, 580, 1670, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 1670, 580, 1670, 
      580, 550, 580, 540, 590   };
const uint16_t Volume_Down[] PROGMEM = {9020, 4490, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 540, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 1670, 590, 1660, 590, 1660, 590, 1670, 580, 550, 
      580, 1670, 590, 1660, 590, 1660, 590, 38310, 9040, 4490, 
      580, 550, 580, 1670, 590, 540, 580, 1670, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 540, 590, 540, 590, 1660, 590, 1670, 
      580, 1670, 590, 1660, 590, 1660, 590, 540, 590, 1660, 
      590, 1670, 580, 540, 590 };
const uint16_t Right[] PROGMEM = {9020, 4490, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 1670, 590, 1660, 590, 1660, 590, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 1670, 580, 550, 580, 540, 
      590, 540, 590, 1670, 580, 540, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 580, 1670, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 1670, 590, 540, 580, 1670, 590, 1660, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 550, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 590, 530, 590 };
const uint16_t Forward[] PROGMEM = {9010, 4490, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 580, 550, 
      580, 1670, 590, 1660, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1670, 580, 540, 590, 1660, 590, 38300, 9040, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 1670, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 580, 550, 580, 1670, 580, 1670, 590, 540, 
      590, 1660, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 540, 580 };
const uint16_t Netflix[] PROGMEM = {9020, 4490, 590, 540, 580, 1670, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1670, 580, 540, 590, 1670, 580, 550, 
      580, 540, 590, 1670, 580, 550, 580, 1670, 590, 540, 
      580, 1670, 590, 540, 590, 1660, 590, 1660, 590, 540, 
      590, 1660, 590, 540, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 540, 590, 1670, 580, 550, 580, 540, 
      590, 1670, 580, 550, 580, 1670, 580, 1670, 590, 1660, 
      590, 540, 590, 1660, 590, 1670, 580, 550, 580, 1670, 
      580, 550, 580, 540, 590, 38290, 9040, 4490, 590, 1660, 
      590, 540, 590, 540, 590, 540, 580, 550, 580, 1670, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 540, 580, 550, 580, 550, 580, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 550, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590 };
const uint16_t Prime_Video[] PROGMEM = {9020, 4480, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1670, 580, 1670, 580, 1670, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 550, 
      580, 1670, 580, 550, 580, 550, 580, 1670, 580, 550, 
      580, 540, 590, 540, 590, 1670, 580, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 1660, 590, 38300, 9040, 4490, 
      580, 540, 590, 1670, 580, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 1670, 580, 1670, 580, 550, 580, 1670, 
      590, 540, 580, 550, 580, 1670, 590, 1660, 590, 540, 
      590, 540, 580, 1670, 590, 540, 590, 1660, 590, 1660, 
      590, 540, 590, 540, 580, 38290, 9040, 4480, 590, 1670, 
      580, 540, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 1670, 580, 550, 580, 540, 590, 540, 
      590, 540, 590, 540, 590, 540, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 540, 590, 540, 580, 550, 580, 550, 580, 1670, 
      580, 1670, 580 };
const uint16_t Home[] PROGMEM = {9020, 4490, 590, 540, 590, 1660, 590, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 1670, 590, 540, 580, 550, 580, 550, 
      580, 1670, 580, 1670, 590, 1660, 590, 1660, 590, 540, 
      590, 540, 590, 540, 590, 540, 590, 540, 590, 540, 
      580, 550, 580, 550, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 1670, 590, 1660, 580, 38310, 9040, 4480, 
      590, 540, 590, 1670, 580, 540, 590, 1670, 580, 550, 
      580, 1670, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 590, 1660, 590, 1660, 590, 540, 590, 540, 
      590, 540, 590, 540, 590, 540, 580, 1670, 590, 540, 
      590, 540, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 590, 530, 590 };
const uint16_t Back[] PROGMEM = {9020, 4490, 590, 540, 580, 1670, 590, 540, 580, 1670, 
      590, 540, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 1670, 590, 540, 580, 550, 580, 550, 
      580, 1670, 580, 1670, 590, 540, 580, 1670, 590, 1660, 
      590, 540, 590, 540, 590, 1660, 590, 1660, 590, 540, 
      590, 1660, 590, 540, 590, 540, 590, 1660, 590, 1670, 
      580, 540, 590, 540, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 550, 580, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 550, 580, 1670, 580, 1670, 590, 540, 
      580, 550, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 550, 580, 540, 590, 1670, 580, 1670, 590, 540, 
      580, 550, 580, 540, 590 };
const uint16_t Reverse[] PROGMEM = {9020, 4490, 580, 540, 590, 1670, 580, 550, 580, 1670, 
      580, 550, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 1670, 580, 550, 580, 550, 580, 540, 
      590, 1670, 580, 1670, 580, 550, 580, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 580, 550, 580, 540, 
      590, 1670, 580, 1670, 580, 550, 580, 1670, 580, 550, 
      580, 540, 590, 1670, 580, 1660, 590, 38300, 9040, 4490, 
      580, 550, 580, 1670, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 590, 1660, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 590, 1660, 590, 540, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 1670, 580, 550, 580, 540, 
      590, 1670, 580, 540, 590 };
const uint16_t Down[] PROGMEM = {9020, 4490, 580, 550, 580, 1670, 580, 550, 580, 1670, 
      590, 540, 580, 1670, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 590, 540, 
      580, 550, 580, 1670, 590, 1660, 590, 540, 590, 540, 
      590, 540, 590, 540, 590, 1660, 590, 1660, 590, 540, 
      590, 540, 590, 1660, 590, 1660, 590, 38300, 9040, 4490, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 550, 580, 540, 590, 540, 590, 1670, 
      580, 1670, 580, 1670, 590, 1660, 590, 540, 590, 540, 
      590, 1660, 590, 1670, 580, 540, 590, 1670, 580, 550, 
      580, 550, 580, 1670, 580, 1670, 590, 540, 590, 540, 
      580, 1670, 590, 540, 580 };
const uint16_t Undo[] PROGMEM = {9020, 4490, 580, 550, 580, 1670, 590, 540, 580, 1670, 
      590, 540, 590, 1660, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1670, 580, 1670, 580, 550, 
      580, 1670, 590, 1660, 590, 1660, 590, 540, 590, 540, 
      590, 540, 590, 540, 590, 1660, 590, 38300, 9040, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 540, 
      590, 540, 590, 540, 580 };
const uint16_t Up[] PROGMEM = {9020, 4480, 590, 540, 590, 1660, 590, 540, 590, 1670, 
      580, 540, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1670, 580, 1670, 580, 550, 580, 540, 590, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 540, 580, 550, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      580, 550, 580, 1670, 590, 1660, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1660, 590, 38310, 9040, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 1660, 
      590, 1660, 590, 540, 590, 540, 590, 1660, 590, 540, 
      590, 1670, 580, 1670, 580, 550, 580, 550, 580, 1670, 
      590, 1660, 590, 540, 580 };
const uint16_t Left[] PROGMEM = {9020, 4490, 580, 550, 580, 1670, 580, 550, 580, 1670, 
      590, 540, 580, 1670, 590, 1660, 590, 1670, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1670, 580, 540, 590, 1670, 580, 1670, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 540, 
      590, 1660, 590, 540, 590, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1660, 590, 1660, 590, 38300, 9050, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 580, 550, 580, 550, 580, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 540, 590, 540, 590, 1660, 590, 1670, 
      580, 550, 580, 540, 590, 540, 590, 540, 590, 1660, 
      590, 1670, 580, 540, 590 };
const uint16_t OK[] PROGMEM = {9020, 4490, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1670, 580, 1670, 580, 1670, 590, 1660, 
      590, 1660, 590, 1670, 580, 540, 590, 540, 590, 540, 
      590, 1660, 590, 1670, 580, 550, 580, 1670, 580, 550, 
      580, 1670, 590, 540, 580, 1670, 590, 540, 590, 540, 
      590, 1660, 590, 540, 590, 1660, 590, 540, 590, 1660, 
      590, 540, 590, 1660, 590, 1660, 590, 38300, 9040, 4480, 
      590, 540, 590, 1660, 590, 540, 590, 1670, 580, 540, 
      590, 1670, 580, 1670, 580, 1670, 590, 1660, 590, 1660, 
      590, 1670, 580, 550, 580, 540, 590, 540, 590, 1670, 
      580, 1670, 580, 550, 580, 1670, 580, 550, 580, 1670, 
      580, 550, 580, 1670, 590, 540, 580, 1670, 590, 1660, 
      590, 540, 590, 1660, 590, 540, 590, 1660, 590, 540, 
      590, 1660, 590, 540, 580, 38280, 9040, 4490, 590, 1660, 
      590, 540, 590, 540, 580, 550, 580, 550, 580, 1670, 
      580, 1670, 590, 1660, 590, 540, 590, 540, 590, 540, 
      590, 540, 580, 550, 580, 540, 590, 1670, 580, 1670, 
      590, 1660, 590, 540, 590, 1660, 590, 1660, 590, 1670, 
      580, 1670, 590, 540, 590, 540, 580, 550, 580, 1670, 
      580, 550, 580, 550, 580, 540, 590, 540, 590, 1670, 
      580, 1660, 590};

struct SignalEntry
{
  const char* name;
  const uint16_t* data;
  size_t size;
};

SignalEntry signalMap[] = {
  {"Disney_Plus", Disney_Plus, sizeof(Disney_Plus) / sizeof(uint16_t) }, 
  {"Volume_Up", Volume_Up, sizeof(Volume_Up) / sizeof(uint16_t) }, 
  {"Settings", Settings, sizeof(Settings) / sizeof(uint16_t) }, 
  {"Apple_TV", Apple_TV, sizeof(Apple_TV) / sizeof(uint16_t) }, 
  {"Mute", Mute, sizeof(Mute) / sizeof(uint16_t) }, 
  {"Power", Power, sizeof(Power) / sizeof(uint16_t) }, 
  {"Pause", Pause, sizeof(Pause) / sizeof(uint16_t) }, 
  {"Volume_Down", Volume_Down, sizeof(Volume_Down) / sizeof(uint16_t) }, 
  {"Right", Right, sizeof(Right) / sizeof(uint16_t) }, 
  {"Forward", Forward, sizeof(Forward) / sizeof(uint16_t) }, 
  {"Netflix", Netflix, sizeof(Netflix) / sizeof(uint16_t) }, 
  {"Prime_Video", Prime_Video, sizeof(Prime_Video) / sizeof(uint16_t) }, 
  {"Home", Home, sizeof(Home) / sizeof(uint16_t) }, 
  {"Back", Back, sizeof(Back) / sizeof(uint16_t) }, 
  {"Reverse", Reverse, sizeof(Reverse) / sizeof(uint16_t) }, 
  {"Down", Down, sizeof(Down) / sizeof(uint16_t) }, 
  {"Undo", Undo, sizeof(Undo) / sizeof(uint16_t) }, 
  {"Up", Up, sizeof(Up) / sizeof(uint16_t) }, 
  {"Left", Left, sizeof(Left) / sizeof(uint16_t) }, 
  {"OK", OK, sizeof(OK) / sizeof(uint16_t) }, 
};

volatile int signalArrIndex = 0;
volatile int signalIndex = 0;
volatile uint16_t lastDelay = 0;
volatile bool newDelay = false;
volatile bool lastWasMark = false;
volatile bool isTransmitting = false;

uint16_t buffer[256];

SignalEntry currentSignal = signalMap[signalArrIndex];
size_t signalLength = currentSignal.size;

void setup() {
  Serial.begin(9600);
  
  pinMode(IR_PIN, OUTPUT);
  pinMode(BUT_PIN, INPUT);
  
  // --- Timer2: 38kHz PWM on pin 3 (OC2B) ---
  TCCR2A = _BV(COM2B1) | _BV(WGM21) | _BV(WGM20);
  TCCR2B = _BV(WGM22) | _BV(CS21);
  OCR2A = 51;
  OCR2B = OCR2A / 2;

  // --- Timer1: CTC for modulating MARK/SPACE timings ---
  cli();
  TCCR1A = 0;
  TCCR1B = 0;
  TCCR1B |= _BV(WGM12);
  TCCR1B |= _BV(CS11); // 2 MHz (0.5 µs ticks)
  OCR1A = (currentSignal.data[0] * 2) - 1;
  TIMSK1 |= _BV(OCIE1A);
  sei();
}


ISR(TIMER1_COMPA_vect) {
  static uint16_t remainingDelay = 0;
  static bool handlingSplit = false;

  TCNT1 = 0;

  if (remainingDelay > 0) {
    uint16_t chunk = min(remainingDelay, (uint16_t)32767);
    remainingDelay -= chunk;

    if (chunk < 5) chunk = 5;
    OCR1A = (chunk * 2) - 1;

    lastDelay = chunk;
    newDelay = true;

    if (remainingDelay == 0 && handlingSplit) {
      signalIndex++;
      handlingSplit = false;
    }
    return;
  }

  if (signalIndex < signalLength) {
    bool isMark = (signalIndex % 2 == 0);

    if (isMark) {
      TCCR2A |= _BV(COM2B1);  // enable PWM
    } else {
      TCCR2A &= ~_BV(COM2B1); // disable PWM
      PORTD &= ~_BV(PD3);
    }

    uint16_t delay = buffer[signalIndex];

    if (delay > 32767) {
      remainingDelay = delay - 32767;
      delay = 32767;
      handlingSplit = true;
    } else {
      signalIndex++;
      handlingSplit = false;
    }

    OCR1A = (delay * 2) - 1;

    lastDelay = delay;
    lastWasMark = isMark;
    newDelay = true;
  } else {
    // Done transmitting
    TCCR1B &= ~_BV(CS11);
    TIMSK1 &= ~_BV(OCIE1A);
    TCCR2A &= ~_BV(COM2B1);
    PORTD &= ~_BV(PD3);
    isTransmitting = false;
  }
}

void loadbuffer(size_t size)
{
  for (int i = 0; i < size; i++)
  {
    buffer[i] = pgm_read_word(&currentSignal.data[i]);
  }
}

void loop() {
  static bool lastButtonState = HIGH;
  bool currentButtonState = digitalRead(BUT_PIN);

  if (lastButtonState == HIGH && currentButtonState == LOW && !isTransmitting) {
    // Button was just pressed
    isTransmitting = true;
    signalIndex = 0;
    signalArrIndex = signalArrIndex % (sizeof(signalMap) / sizeof(signalMap[0]));
    currentSignal = signalMap[signalArrIndex++];
    Serial.println(currentSignal.name);
    signalLength = currentSignal.size;
    loadbuffer(signalLength);
    // Reset Timer1 and enable
    TCNT1 = 0;
    TCCR1B |= _BV(CS11);
    TIMSK1 |= _BV(OCIE1A);
  }

  lastButtonState = currentButtonState;
}
